on: [push, pull_request]

name: Release Builds
jobs:
#  linux:
#    name: Linux
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          git clone https://github.com/flutter/flutter.git
#          cd flutter
#          git checkout e3c6979d1b
#      - run: echo ::add-path::`pwd`"/flutter/bin"
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          ref: ${{ github.event.release.tag_name }}
#          path: 'app'
#      - name: Install required build tools for linux
#        run: sudo apt-get update && sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev
#      - name: Build linux release
#        run: |
#          cd app
#          flutter config --enable-linux-desktop
#          flutter config --no-enable-android
#          flutter pub get
#          flutter clean
#          flutter build linux --release
#          cd build/linux/release
#          zip -r linux-release.zip bundle
#      - name: Create linux Release
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: 'app/build/linux/release/linux-release.zip'
#          token: ${{ secrets.TOKEN }}
#          allowUpdates: true
#
#  web:
#    name: Web
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          git clone https://github.com/flutter/flutter.git
#          cd flutter
#          git checkout e3c6979d1b
#      - run: echo ::add-path::`pwd`"/flutter/bin"
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          ref: ${{ github.event.release.tag_name }}
#          path: 'app'
#      - run: |
#          cd app
#          flutter config --enable-web
#          flutter config --no-enable-android
#          flutter pub get
#          flutter build web -t lib/main.web.dart --release
#      - name: Deploy to Firebase
#        uses: w9jds/firebase-action@v1.3.0
#        with:
#          args: deploy --only hosting
#        env:
#          PROJECT_PATH: 'app'
#          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
#
#  android:
#    name: Android
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          git clone https://github.com/flutter/flutter.git
#          cd flutter
#          git checkout e3c6979d1b
#      - run: echo ::add-path::`pwd`"/flutter/bin"
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          ref: ${{ github.event.release.tag_name }}
#          path: 'app'
#      - run: |
#          cd app
#          flutter pub get
#          flutter build apk -t lib/main.mobile.dart --release
#      - name: Create Android Release
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: 'app/build/app/outputs/apk/release/app-release.apk'
#          token: ${{ secrets.TOKEN }}
#          allowUpdates: true
#
#  macos:
#    name: MacOS
#    runs-on: macos-latest
#    steps:
#      - run: |
#          git clone https://github.com/flutter/flutter.git
#          cd flutter
#          git checkout e3c6979d1b
#      - run: echo ::add-path::`pwd`"/flutter/bin"
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          ref: ${{ github.event.release.tag_name }}
#          path: 'app'
#      - run: |
#          cd app
#          flutter config --enable-macos-desktop
#          flutter config --no-enable-android
#          dart scripts/mac.pub.dart
#          flutter pub get
#          flutter build macos -v --release
#          cd build/macos/Build/Products/Release
#          ditto -c -k --sequesterRsrc --keepParent invmovieconcept1.app macos-release.zip
#      - uses: ncipollo/release-action@v1
#        with:
#          artifacts: 'app/build/macOS/Build/Products/Release/macos-release.zip'
#          token: ${{ secrets.TOKEN }}
#          allowUpdates: true

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - run: |
          git clone https://github.com/OpenIoTHub/flutter_natcloud_service.git ../flutter_natcloud_service
          git clone https://$Token@github.com/OpenIoTHub/OpenIoTHubService OpenIoTHubService
          git clone https://github.com/flutter/flutter.git
          cd flutter
      - run: echo ::add-path::"$(pwd)\flutter\bin"
#      - env PATH:$(pwd)\flutter\bin;%PATH%
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}
          path: 'app'
      - run: |
          cd app
          flutter config --enable-windows-desktop
          flutter config --no-enable-android
          flutter pub get
          flutter build windows --release
          dir
          tree
#          cd build\windows\runner
#          Compress-Archive -Path Release -DestinationPath windows-release.zip
      - name: Windows release build for github
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'app\build\windows\runner\windows-release.zip'
          token: ${{ secrets.TOKEN }}
          allowUpdates: true
